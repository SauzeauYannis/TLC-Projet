State 48 conflicts: 4 shift/reduce
State 50 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: code

    2 code: code instruction SC
    3     | %empty

    4 instruction: declaration
    5            | affectation
    6            | loop
    7            | move
    8            | color
    9            | DOWN
   10            | UP

   11 declaration: VAR ID
   12            | VAR ID AFFECT value

   13 affectation: ID AFFECT value

   14 loop: LOOP ID value value SC code END LOOP

   15 move: MOVE pos
   16     | LINE pos pos
   17     | RECTANGLE pos pos

   18 color: COLOR COLOR_VAL

   19 value: NUM
   20      | ID
   21      | value op value
   22      | LPAR value op value RPAR

   23 op: OPADD
   24   | OPSUB
   25   | OPMUL
   26   | OPDIV

   27 pos: LPAR value COMMA value RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    DOWN (258) 9
    UP (259) 10
    MOVE (260) 15
    LINE (261) 16
    RECTANGLE (262) 17
    COLOR (263) 18
    COLOR_VAL (264) 18
    OPADD (265) 23
    OPSUB (266) 24
    OPMUL (267) 25
    OPDIV (268) 26
    VAR (269) 11 12
    LOOP (270) 14
    END (271) 14
    AFFECT (272) 12 13
    SC (273) 2 14
    LPAR (274) 22 27
    RPAR (275) 22 27
    COMMA (276) 27
    ID <ident> (277) 11 12 13 14 20
    NUM <value> (278) 19


Nonterminals, with rules where they appear

    $accept (24)
        on left: 0
    program (25)
        on left: 1
        on right: 0
    code <inst> (26)
        on left: 2 3
        on right: 1 2 14
    instruction <inst> (27)
        on left: 4 5 6 7 8 9 10
        on right: 2
    declaration <inst> (28)
        on left: 11 12
        on right: 4
    affectation <inst> (29)
        on left: 13
        on right: 5
    loop <inst> (30)
        on left: 14
        on right: 6
    move <inst> (31)
        on left: 15 16 17
        on right: 7
    color <inst> (32)
        on left: 18
        on right: 8
    value <expr> (33)
        on left: 19 20 21 22
        on right: 12 13 14 21 22 27
    op <expr> (34)
        on left: 23 24 25 26
        on right: 21 22
    pos <expr> (35)
        on left: 27
        on right: 15 16 17


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (code)

    program  go to state 1
    code     go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: code .
    2 code: code . instruction SC

    DOWN       shift, and go to state 4
    UP         shift, and go to state 5
    MOVE       shift, and go to state 6
    LINE       shift, and go to state 7
    RECTANGLE  shift, and go to state 8
    COLOR      shift, and go to state 9
    VAR        shift, and go to state 10
    LOOP       shift, and go to state 11
    ID         shift, and go to state 12

    $default  reduce using rule 1 (program)

    instruction  go to state 13
    declaration  go to state 14
    affectation  go to state 15
    loop         go to state 16
    move         go to state 17
    color        go to state 18


State 3

    0 $accept: program $end .

    $default  accept


State 4

    9 instruction: DOWN .

    $default  reduce using rule 9 (instruction)


State 5

   10 instruction: UP .

    $default  reduce using rule 10 (instruction)


State 6

   15 move: MOVE . pos

    LPAR  shift, and go to state 19

    pos  go to state 20


State 7

   16 move: LINE . pos pos

    LPAR  shift, and go to state 19

    pos  go to state 21


State 8

   17 move: RECTANGLE . pos pos

    LPAR  shift, and go to state 19

    pos  go to state 22


State 9

   18 color: COLOR . COLOR_VAL

    COLOR_VAL  shift, and go to state 23


State 10

   11 declaration: VAR . ID
   12            | VAR . ID AFFECT value

    ID  shift, and go to state 24


State 11

   14 loop: LOOP . ID value value SC code END LOOP

    ID  shift, and go to state 25


State 12

   13 affectation: ID . AFFECT value

    AFFECT  shift, and go to state 26


State 13

    2 code: code instruction . SC

    SC  shift, and go to state 27


State 14

    4 instruction: declaration .

    $default  reduce using rule 4 (instruction)


State 15

    5 instruction: affectation .

    $default  reduce using rule 5 (instruction)


State 16

    6 instruction: loop .

    $default  reduce using rule 6 (instruction)


State 17

    7 instruction: move .

    $default  reduce using rule 7 (instruction)


State 18

    8 instruction: color .

    $default  reduce using rule 8 (instruction)


State 19

   27 pos: LPAR . value COMMA value RPAR

    LPAR  shift, and go to state 28
    ID    shift, and go to state 29
    NUM   shift, and go to state 30

    value  go to state 31


State 20

   15 move: MOVE pos .

    $default  reduce using rule 15 (move)


State 21

   16 move: LINE pos . pos

    LPAR  shift, and go to state 19

    pos  go to state 32


State 22

   17 move: RECTANGLE pos . pos

    LPAR  shift, and go to state 19

    pos  go to state 33


State 23

   18 color: COLOR COLOR_VAL .

    $default  reduce using rule 18 (color)


State 24

   11 declaration: VAR ID .
   12            | VAR ID . AFFECT value

    AFFECT  shift, and go to state 34

    $default  reduce using rule 11 (declaration)


State 25

   14 loop: LOOP ID . value value SC code END LOOP

    LPAR  shift, and go to state 28
    ID    shift, and go to state 29
    NUM   shift, and go to state 30

    value  go to state 35


State 26

   13 affectation: ID AFFECT . value

    LPAR  shift, and go to state 28
    ID    shift, and go to state 29
    NUM   shift, and go to state 30

    value  go to state 36


State 27

    2 code: code instruction SC .

    $default  reduce using rule 2 (code)


State 28

   22 value: LPAR . value op value RPAR

    LPAR  shift, and go to state 28
    ID    shift, and go to state 29
    NUM   shift, and go to state 30

    value  go to state 37


State 29

   20 value: ID .

    $default  reduce using rule 20 (value)


State 30

   19 value: NUM .

    $default  reduce using rule 19 (value)


State 31

   21 value: value . op value
   27 pos: LPAR value . COMMA value RPAR

    OPADD  shift, and go to state 38
    OPSUB  shift, and go to state 39
    OPMUL  shift, and go to state 40
    OPDIV  shift, and go to state 41
    COMMA  shift, and go to state 42

    op  go to state 43


State 32

   16 move: LINE pos pos .

    $default  reduce using rule 16 (move)


State 33

   17 move: RECTANGLE pos pos .

    $default  reduce using rule 17 (move)


State 34

   12 declaration: VAR ID AFFECT . value

    LPAR  shift, and go to state 28
    ID    shift, and go to state 29
    NUM   shift, and go to state 30

    value  go to state 44


State 35

   14 loop: LOOP ID value . value SC code END LOOP
   21 value: value . op value

    OPADD  shift, and go to state 38
    OPSUB  shift, and go to state 39
    OPMUL  shift, and go to state 40
    OPDIV  shift, and go to state 41
    LPAR   shift, and go to state 28
    ID     shift, and go to state 29
    NUM    shift, and go to state 30

    value  go to state 45
    op     go to state 43


State 36

   13 affectation: ID AFFECT value .
   21 value: value . op value

    OPADD  shift, and go to state 38
    OPSUB  shift, and go to state 39
    OPMUL  shift, and go to state 40
    OPDIV  shift, and go to state 41

    $default  reduce using rule 13 (affectation)

    op  go to state 43


State 37

   21 value: value . op value
   22      | LPAR value . op value RPAR

    OPADD  shift, and go to state 38
    OPSUB  shift, and go to state 39
    OPMUL  shift, and go to state 40
    OPDIV  shift, and go to state 41

    op  go to state 46


State 38

   23 op: OPADD .

    $default  reduce using rule 23 (op)


State 39

   24 op: OPSUB .

    $default  reduce using rule 24 (op)


State 40

   25 op: OPMUL .

    $default  reduce using rule 25 (op)


State 41

   26 op: OPDIV .

    $default  reduce using rule 26 (op)


State 42

   27 pos: LPAR value COMMA . value RPAR

    LPAR  shift, and go to state 28
    ID    shift, and go to state 29
    NUM   shift, and go to state 30

    value  go to state 47


State 43

   21 value: value op . value

    LPAR  shift, and go to state 28
    ID    shift, and go to state 29
    NUM   shift, and go to state 30

    value  go to state 48


State 44

   12 declaration: VAR ID AFFECT value .
   21 value: value . op value

    OPADD  shift, and go to state 38
    OPSUB  shift, and go to state 39
    OPMUL  shift, and go to state 40
    OPDIV  shift, and go to state 41

    $default  reduce using rule 12 (declaration)

    op  go to state 43


State 45

   14 loop: LOOP ID value value . SC code END LOOP
   21 value: value . op value

    OPADD  shift, and go to state 38
    OPSUB  shift, and go to state 39
    OPMUL  shift, and go to state 40
    OPDIV  shift, and go to state 41
    SC     shift, and go to state 49

    op  go to state 43


State 46

   21 value: value op . value
   22      | LPAR value op . value RPAR

    LPAR  shift, and go to state 28
    ID    shift, and go to state 29
    NUM   shift, and go to state 30

    value  go to state 50


State 47

   21 value: value . op value
   27 pos: LPAR value COMMA value . RPAR

    OPADD  shift, and go to state 38
    OPSUB  shift, and go to state 39
    OPMUL  shift, and go to state 40
    OPDIV  shift, and go to state 41
    RPAR   shift, and go to state 51

    op  go to state 43


State 48

   21 value: value . op value
   21      | value op value .

    OPADD  shift, and go to state 38
    OPSUB  shift, and go to state 39
    OPMUL  shift, and go to state 40
    OPDIV  shift, and go to state 41

    OPADD     [reduce using rule 21 (value)]
    OPSUB     [reduce using rule 21 (value)]
    OPMUL     [reduce using rule 21 (value)]
    OPDIV     [reduce using rule 21 (value)]
    $default  reduce using rule 21 (value)

    op  go to state 43


State 49

   14 loop: LOOP ID value value SC . code END LOOP

    $default  reduce using rule 3 (code)

    code  go to state 52


State 50

   21 value: value . op value
   21      | value op value .
   22      | LPAR value op value . RPAR

    OPADD  shift, and go to state 38
    OPSUB  shift, and go to state 39
    OPMUL  shift, and go to state 40
    OPDIV  shift, and go to state 41
    RPAR   shift, and go to state 53

    OPADD  [reduce using rule 21 (value)]
    OPSUB  [reduce using rule 21 (value)]
    OPMUL  [reduce using rule 21 (value)]
    OPDIV  [reduce using rule 21 (value)]

    op  go to state 43


State 51

   27 pos: LPAR value COMMA value RPAR .

    $default  reduce using rule 27 (pos)


State 52

    2 code: code . instruction SC
   14 loop: LOOP ID value value SC code . END LOOP

    DOWN       shift, and go to state 4
    UP         shift, and go to state 5
    MOVE       shift, and go to state 6
    LINE       shift, and go to state 7
    RECTANGLE  shift, and go to state 8
    COLOR      shift, and go to state 9
    VAR        shift, and go to state 10
    LOOP       shift, and go to state 11
    END        shift, and go to state 54
    ID         shift, and go to state 12

    instruction  go to state 13
    declaration  go to state 14
    affectation  go to state 15
    loop         go to state 16
    move         go to state 17
    color        go to state 18


State 53

   22 value: LPAR value op value RPAR .

    $default  reduce using rule 22 (value)


State 54

   14 loop: LOOP ID value value SC code END . LOOP

    LOOP  shift, and go to state 55


State 55

   14 loop: LOOP ID value value SC code END LOOP .

    $default  reduce using rule 14 (loop)
